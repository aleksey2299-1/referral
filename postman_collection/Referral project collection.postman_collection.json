{
  "info": {
    "_postman_id": "90fe440f-fd5c-4568-b2e9-731ccbf8eea4",
    "name": "Referral project collection",
    "description": "Инструкция по запуску коллекции:\n\n<img src=\"https://content.pstmn.io/b2158ae7-7075-4d7a-b114-53c9d7647f8e/aW1hZ2UucG5n\" width=\"403\" height=\"189\">\n\n<img src=\"https://content.pstmn.io/c4b01557-03ef-4560-b990-388c5691d52f/aW1hZ2UucG5n\" width=\"403\" height=\"376\">\n\n<img src=\"https://content.pstmn.io/e3a7d43a-8f36-401c-9fac-f4fce4f1f2fa/aW1hZ2UucG5n\" alt=\"\" height=\"675\" width=\"1316\">",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "28804139"
  },
  "item": [
    {
      "name": "Create users, get tokens",
      "item": [
        {
          "name": "Create user 1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Successful code request №1\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                  "});\r",
                  "var responseJson = pm.response.json();\r",
                  "var user1_code = responseJson.confirmation_code;\r",
                  "pm.collectionVariables.set(\"user1_code\", user1_code);"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"phone\": \"+7 (999) 555-55-55\",\r\n    \"send_code\": true\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/v1/login/",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "login", ""]
            }
          },
          "response": []
        },
        {
          "name": "Get user 1 token",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [""],
                "type": "text/javascript",
                "packages": {}
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Successful token request №1\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                  "});\r",
                  "var responseJson = pm.response.json();\r",
                  "var user1_token = responseJson.token;\r",
                  "pm.collectionVariables.set(\"user1_token\", user1_token);"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"phone\": \"+7 (999) 555-55-55\",\r\n    \"send_code\": false,\r\n    \"confirmation_code\": {{user1_code}}\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/v1/login/",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "login", ""]
            }
          },
          "response": []
        },
        {
          "name": "Create user 2",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Successful code request №2\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                  "});\r",
                  "var responseJson = pm.response.json();\r",
                  "var user2_code = responseJson.confirmation_code;\r",
                  "pm.collectionVariables.set(\"user2_code\", user2_code);"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"phone\": \"+7 (999) 666-66-66\",\r\n    \"send_code\": true\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/v1/login/",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "login", ""]
            }
          },
          "response": []
        },
        {
          "name": "Get user 2 token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Successful token request №2\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
                  "});\r",
                  "var responseJson = pm.response.json();\r",
                  "var user2_token = responseJson.token;\r",
                  "pm.collectionVariables.set(\"user2_token\", user2_token);"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"phone\": \"+7 (999) 666-66-66\",\r\n    \"send_code\": false,\r\n    \"confirmation_code\": {{user2_code}}\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/v1/login/",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "login", ""]
            }
          },
          "response": []
        },
        {
          "name": "Create user invalid phone",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Failed code request\", function () {\r",
                  "    pm.response.to.have.status(400);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"phone\": \"8 (999) 555-55-55\",\r\n    \"send_code\": true\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/v1/login/",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "login", ""]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "User profile",
      "item": [
        {
          "name": "Get user 1 profile",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var responseJson = pm.response.json();",
                  "var referral_code = responseJson.referral_code;",
                  "pm.collectionVariables.set(\"referral_code\", referral_code);"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{user1_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/profile/",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "profile", ""]
            },
            "description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
          },
          "response": []
        },
        {
          "name": "Get anonim profile",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Unauth request\", function () {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/profile/",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "profile", ""]
            },
            "description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
          },
          "response": []
        }
      ]
    },
    {
      "name": "Patch user",
      "item": [
        {
          "name": "Update referral code",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Successful PATCH request\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{user2_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"used_referral_code\": \"{{referral_code}}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/v1/profile/",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "profile", ""]
            },
            "description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
          },
          "response": []
        },
        {
          "name": "Update invalid referral code",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Invalid PATCH request №1\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{user2_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"used_referral_code\": \"hi_sir\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/v1/profile/",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "profile", ""]
            },
            "description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
          },
          "response": []
        },
        {
          "name": "Update self referral code",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Invalid PATCH request №2\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{user1_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"used_referral_code\": \"{{referral_code}}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/v1/profile/",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "profile", ""]
            },
            "description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
          },
          "response": []
        }
      ]
    },
    {
      "name": "Data clear",
      "item": [
        {
          "name": "Delete user 1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Successful DELETE request\", function () {\r",
                  "    pm.response.to.have.status(204);\r",
                  "});\r",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{user1_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/profile/",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "profile", ""]
            }
          },
          "response": []
        },
        {
          "name": "Delete user 2",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Successful DELETE request\", function () {\r",
                  "    pm.response.to.have.status(204);\r",
                  "});\r",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{user2_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/profile/",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "profile", ""]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    }
  ],
  "variable": [
    {
      "key": "id",
      "value": "1"
    },
    {
      "key": "base_url",
      "value": "https://referral.sytes.net"
    },
    {
      "key": "user1_code",
      "value": ""
    },
    {
      "key": "user1_token",
      "value": ""
    },
    {
      "key": "user2_code",
      "value": ""
    },
    {
      "key": "user2_token",
      "value": ""
    },
    {
      "key": "referral_code",
      "value": ""
    }
  ]
}
